def preprocess(dataset):
    floor_mapping = {"Цоколь": -1, "цокольный": -1, "Подвал": -1, "подвал": -1, "цоколь": -1,
                     "-1.0": -1, "0.0": -1, "-2.0": -1, "Техническое подполье": -1,

                     "1 этаж": 1, "1.0": 1, "1-й": 1, "фактически на уровне 1 этажа": 1, "1, антресоль": 1,
                     "2.0": 2, "2-й": 2,
                     "3.0": 3, "3 этаж": 3,
                     "4.0": 4, "4 этаж": 4, "мансарда (4эт)":4,
                    "5.0": 5, "6.0": 6,
    "7.0": 7,
    "8.0": 8,
    "9.0": 9,
    "10.0": 10,

    "1,2": 1, "1, 2": 1, "1,2,3,4": 1, "1, 2, 3": 1, "1,2,3,4,5": 1, "1-й, 2-й": 1, "1, 2 этаж": 1,
    "подвал, 1, 2, 3": 1, "подвал, 1": 1,
    "1,2,3, антресоль, технический этаж": 1, "1 (по док-м цоколь)": 1,
    "цокольный, 1,2": 1, "1-7": 1, "3, Мансарда (4 эт)": 3, "1,2,подвал": 1,
    "подвал, 1, 2": 1, "3 этаж, мансарда (4 этаж)": 3, "2, 3": 2,

    "1, подвал": 0, "1, цоколь": 0,
    "цоколь, 1": 0, "подвал, 1 и 4 этаж": 0,

    "подвал, 3. 4 этаж": 3, "подвал, 1-3": 1, "7,8": 7,
    "подвал, цоколь, 1 этаж": 2,
    "15.0": 100, "15": 100,
    "17.0": 100, "18.0": 100, "16.0": 100,
    "14": 100,
    "13": 100,
    "12.0": 100,
    "29": 100, "36": 100
    }

    floor_count_mapping = {
        "1, подвал": 2,
        "1, 2": 2,
        "1,2,3,4": 2,
        "цоколь, 1, 2,3,4,5,6": 7,
        "1, 2, 3": 3,
        "цоколь, 1": 2,
        "1, цоколь": 2,
        "Цоколь, 1,2(мансарда)": 3,
        "подвал,1,2,3,4,5": 6,
        "1-3 этажи": 3,
        "1 этаж, подвал": 2,
        "1,2,3,4, подвал": 5,
        "подвал,1,2,3": 4,
        "1,2,3 этаж, подвал": 4,
        "1,2,3,4,5": 5,
        "2, 3, 4, тех.этаж": 4,
        "технический этаж,5,6": 3,
        " 1-2, подвальный": 3,
        "1, 2, 3, мансардный": 4,
        "1,2": 2,
        "подвал, 1 и 4 этаж": 3,
        "4, 5": 2,
        "1 + подвал (без отделки)": 2,
        "подвал, 1,2,3": 4,
        "подвал, 1-4 этаж": 5,

        "1,2,антресоль": 2,
        " 1, 2, Антресоль": 2,
        "подва, 1.2 этаж": 3,
        "подвал, 1-7, техэтаж": 8,
        "1,2,3": 3,
        "3,4": 2,
        "1-й, подвал": 2,
        "1-й, 2-й": 2,
        "1-3 этажи, цоколь (188,4 кв.м), подвал (104 кв.м)": 3,
        "1, подвал, антресоль": 2,
        "1.2": 2,
        "1-3": 3,
        "подвал , 1": 2,
        "подвал, 3. 4 этаж": 3,
        "1, 2 этаж": 2,
        "подвал, 1, 2, 3": 3,
        "подвал, 1": 2,
        "1,2,3, антресоль, технический этаж": 4,
        "цокольный, 1,2": 3,
        "1-7": 8,
        "3, Мансарда (4 эт)": 2,
        "1,2,подвал": 3,
        "подвал, 1, 2": 3,
        "3 этаж, мансарда (4 этаж)": 2,
        "2, 3": 2,
        "подвал, 1-3": 4,
        "подвал, цоколь, 1 этаж": 2,
        "7,8": 2

    }

    has_basement = [
        "подвал", "цоколь", "1, подвал", "цокольный", "Техническое подполье", "цоколь, 1", "1, цоколь",
        "1 этаж, подвал", "подвал , 1", "Цоколь, 1,2(мансарда)",
        "1,2,3 этаж, подвал", "цоколь, 1, 2,3,4,5,6", "подвал, 1", "1-й, подвал", "1 (по док-м цоколь)", "подвал, 2",
        "подвал, 1 и 4 этаж", "2, 3, 4, тех.этаж",
        "1,2,3,4, подвал", "подвал,1,2,3,4,5", "1-3 этажи, цоколь (188,4 кв.м), подвал (104 кв.м)",
        "технический этаж,5,6", "подвал,1,2,3", "подва, 1.2 этаж",
        "подвал, цоколь, 1 этаж", "подвал, 1, 2", "подвал, 1-4 этаж", "1, подвал, антресоль",
        "1 + подвал (без отделки)", " 1-2, подвальный", "подвал, 3. 4 этаж",
        "подвал, 1,2,3", "тех.этаж (6)", "цокольный, 1,2", "1,2,3, антресоль, технический этаж", "Цоколь", "1,2,подвал",
        "подвал, 1, 2, 3", "1 (Цокольный этаж)", "подвал, 1-3", "подвал, 1-7, техэтаж"
    ]

    dataset["has_basement"] = 0
    dataset.loc[dataset["floor"].isna(), "has_basement"] = -999

    for k in has_basement:
        dataset.loc[dataset["floor"] == k, "has_basement"] = 1

    dataset["floor_count"] = 1
    dataset.loc[dataset["floor"].isna(), "floor_count"] = -999
    for k, v in floor_count_mapping.items():
        dataset.loc[dataset["floor"] == k, "floor_count"] = v

    for k, v in floor_mapping.items():
        dataset.loc[dataset["floor"] == k, "floor"] = v
    dataset["floor"] = dataset["floor"].fillna(-999)
    dataset["floor"] = dataset.floor.astype("str")
    return dataset
